{"version":3,"sources":["App.js","registerServiceWorker.js","index.js"],"names":["App","props","registro","setState","hecho","usuario","value","correo","nuevoRegistro","state","errorMensaje","this","className","onClick","icon","faUser","id","type","placeholder","ref","input","faEnvelope","faUnlock","clave","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.fe2b0452.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faUser, faEnvelope, faUnlock} from '@fortawesome/free-solid-svg-icons'\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      hecho:false,\n      usuario:'',\n      errorMensaje:''\n    }\n  }\n\n  registro = () => {\n    this.setState({\n      hecho:true,\n      usuario:this.usuario.value,\n      correo:this.correo.value\n    })\n  }\n\n  nuevoRegistro = () => {\n    this.setState({\n      hecho:false,\n      usuario:''\n    })\n  }\n\n  render() {\n    if (this.state.hecho)\n      return(\n          <div className=\"border rounded login m-5 container login\">\n          <h3 className=\"row-4 text-center\">REGISTRO SATISFACTORIO</h3>\n          <p>Tu nombre de usuario es: <b>{this.state.usuario}</b></p>\n          <p>Tu correo electrónico es: <b>{this.state.correo}</b></p>\n          <div className='btn-group pb-3'>\n          <a className=\"btn btn-lg row-4 btn-outline-warning\" onClick={this.nuevoRegistro}>\n          <i><FontAwesomeIcon className=\"fa-fw\" icon={faUser}/></i>Nuevo Registro</a>\n        </div>\n        </div>\n      );\n    return (\n        <div className='border rounded login m-5 container login'>\n      <h2>REGISTRO</h2>\n      <form>\n        <div className=\"input-group pb-3\">\n          <div className=\"input-group-prepend\">\n            <span className=\"input-group-text\">\n            <i  className= \"fa-fw\"><FontAwesomeIcon icon={faUser}/></i></span>\n          </div>\n          <input id='usuario' className=\"form-control\" \n          type=\"text\" placeholder=\"Usuario\"\n          ref={input => this.usuario = input}/>\n        </div>\n        <div className=\"input-group pb-3\">\n          <div className=\"input-group-prepend\">\n            <span className=\"input-group-text\">\n            <i className= \"fa-fw\"><FontAwesomeIcon icon={faEnvelope}/></i></span>\n          </div>\n          <input id='correo' className=\"form-control\" \n          type=\"text\" placeholder=\"Correo Electrónico Institucional\"\n          ref={input => this.correo = input}/>\n        </div>\n        <div className=\"input-group pb-3\">\n          <div className=\"input-group-prepend\">\n            <span className=\"input-group-text\">\n            <i className=\"fa-fw\"><FontAwesomeIcon icon={faUnlock}/></i></span>\n          </div>\n          <input id='clave'className=\"form-control\" \n          type=\"password\" placeholder=\"Contraseña\"\n          ref={input => this.clave = input}/>\n        </div>\n        <div className='btn-group pb-3'>\n          <a className=\"btn btn-lg row-4 btn-outline-warning\" onClick={this.registro}>\n          <i><FontAwesomeIcon className=\"fa-fw\" icon={faUser}/></i>Registrar</a>\n        </div>\n      </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n        <React.StrictMode>\n                <App />\n        </React.StrictMode>,\n        document.getElementById('root'));\n\nregisterServiceWorker();\n"],"sourceRoot":""}